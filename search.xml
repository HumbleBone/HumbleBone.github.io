<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>使用ShadowsocksR实现科学上网</title>
      <link href="/2019/10/05/shi-yong-shadowsocksr-shi-xian-ke-xue-shang-wang/"/>
      <url>/2019/10/05/shi-yong-shadowsocksr-shi-xian-ke-xue-shang-wang/</url>
      
        <content type="html"><![CDATA[<blockquote><p>写在前面🙊：</p><p>我最开始的时候是使用 Lantern 翻墙的，那时候刚好蓝灯有做活动，一口气就买了两年的VPN，简单配置一下，就可以科学上网了。刚开始的一年用的还可以，除了遇到一些重大的日子（你们懂的），可能会出现为期几天的瘫痪，大部分时间都还算凑合。过了一年之后，蓝灯就开始经常出现间歇性翻不了墙，VPN的主机地址不是日本就是新加坡这两个地方，没有办法选择节点。想着上官网论坛求救一手，也都是万年不变的 <code>蓝灯常见问题解决办法</code>，感觉自己已经逐渐被抛弃了😶。于是，就开始了解其他更靠谱的科学上网的方式，如果你也和我有这样的遭遇，那也可以尝试一下ShadowsocksR（以下简称ssr）的搭建教程。让大家都能共享自由的互联网🌍。</p></blockquote><h2 id="选择SSR的好处"><a href="#选择SSR的好处" class="headerlink" title="选择SSR的好处"></a>选择SSR的好处</h2><ul><li>可以自己选择 VPS 服务器，根据自己的需求，选择不同的节点，由于是个人服务器，所以IP被封的几率会小很多，就算被封了，也可以重新再搭建一个服务器，方便很多。</li><li>主流的服务器商可选择的有很多，每个月的流量也完全够自己用，甚至完全可以和自己信任的小伙伴一起合租一个，价格上便宜很多，Github上通过学生认证之后，还可以获取 <code>DigitalOcean</code> <a href="https://education.github.com/pack" target="_blank" rel="noopener">学生优惠</a>。</li><li>相比于 Lantern 这种直接提供VPN的服务商而言，科学上网的速度和稳定性简直不要太好，而且还可以自己选择充值多少，万一服务商挂了，钱也不至于打水漂了。</li></ul><h2 id="购买VPS服务器"><a href="#购买VPS服务器" class="headerlink" title="购买VPS服务器"></a>购买VPS服务器</h2><p>现在VPS服务器商有很多，其中我个人比较推荐的就是 <code>Vultr</code> 和 <code>DigitalOcean</code> （搬瓦工），这两个服务器商都是可以随时部署随时摧毁服务器，按小时计费，同时还可以用支付宝或者是微信支付。我个人是选择  <code>Vultr</code> 的 VPS 服务器。</p><p>首先登陆 <a href="https://www.vultr.com/" target="_blank" rel="noopener">Vultr</a> 官网，进行注册和登陆，在充值一定金额之后，就可以开始部署服务器，选择 <code>Deploy new server</code>  ，之后按照如下步骤部署服务器：</p><p><strong>1、选择服务器</strong></p><p><img src="/2019/10/05/shi-yong-shadowsocksr-shi-xian-ke-xue-shang-wang/1.png" alt=""></p><p><strong>2、选择节点</strong></p><p><code>Vultr</code> 官网一共提供了16个节点供用户选择，起初我在选择节点的时候，上网查了一下。大部分人都推荐选择美国西部的洛杉矶和硅谷这两个机房，这是除新加坡和日本之外两个离大陆最近的机房，所以速度上会更快。但是，经过我自己测试一段时间之后，我觉得芝加哥的机房速度也还不错，尤其是不会出现晚上高峰期的情况。<code>Vultr</code> 官网提供了测速的 👉<a href="https://www.vultr.com/resources/faq/#downloadspeedtests" target="_blank" rel="noopener">地址</a>，建议大家根据自己的位置测个速之后，再做选择。</p><p><img src="/2019/10/05/shi-yong-shadowsocksr-shi-xian-ke-xue-shang-wang/2.png" alt=""></p><p><strong>3、选择服务器系统</strong></p><p>系统推荐选择 <code>CentOS</code>，目前提供三个版本的系统，系统为64位的</p><p><img src="/2019/10/05/shi-yong-shadowsocksr-shi-xian-ke-xue-shang-wang/3.png" alt=""></p><p><strong>4、选择套餐</strong></p><p>对于学生而言，实惠为主，所以这里我选择的是一个月5美金的套餐，折合人名币大约35元一个月。如果合租的话那就是一个月18元左右，对于学生党而言，也还可以接受。一个月的带宽上限为1000GB，这个大家完全不用担心，就算你经常上youtube看视频，也是够用的，当然这里的服务器是从你一开始部署之后，就开始计费了。如果你不想用了，你单单关闭shadowsocksR是没有用的，只有在你摧毁服务器之后才不计费。</p><p><img src="/2019/10/05/shi-yong-shadowsocksr-shi-xian-ke-xue-shang-wang/4.png" alt=""></p><p><strong>5、部署成功</strong></p><p>套餐选择之后，就可以部署了。接着等待服务器启动完成，看到Status是绿色的Running就是启动完成了，这个过程大概需要1-3分钟。</p><p><img src="/2019/10/05/shi-yong-shadowsocksr-shi-xian-ke-xue-shang-wang/5.png" alt=""></p><p>我们把部署好的服务器IP地址和密码记录下来，后面会用到，这个很重要。为了测试你的IP地址是否可用，你可以打开本地的终端，ping一下你的IP地址，看一下信息。</p><p><img src="/2019/10/05/shi-yong-shadowsocksr-shi-xian-ke-xue-shang-wang/6.png" alt=""></p><p>如果一切顺利的话，那么恭喜你，你的服务器就算部署就算成功了🤟</p><h2 id="服务器安装SSR"><a href="#服务器安装SSR" class="headerlink" title="服务器安装SSR"></a>服务器安装SSR</h2><p>windows下ssh连接需要下载Xshell，所以我们现需要安装一下Xshell，具体安装过程这里就不详细展开了，默认下载成功之后，开始配置，具体步骤可以参考这篇<a href="https://github.com/zhaoweih/Shadowsocks-Tutorial" target="_blank" rel="noopener">文章</a> 。</p><h4 id="安装SSR"><a href="#安装SSR" class="headerlink" title="安装SSR"></a>安装SSR</h4><p>1、假设你已经通过ssh连接上服务器了，这时候我们开始一键安装SSR，因为前人的帮助，使得我们在这一步基本不需要做什么，只需在终端输入相应的指令即可。</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">wget</span> --no-check-certificate https://raw.githubusercontent.com/teddysun/shadowsocks_install/master/shadowsocksR.sh<span class="token function">chmod</span> +x shadowsocksR.sh./shadowsocksR.sh 2<span class="token operator">></span><span class="token operator">&amp;</span>1 <span class="token operator">|</span> <span class="token function">tee</span> shadowsocksR.log<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>2、接下来设置密码、端口，加密方式，协议，混淆（obfs）就可以了。</p><p>3、安装完成后，会有脚本提示如下：</p><pre class="line-numbers language-text"><code class="language-text">Congratulations, ShadowsocksR server install completed!Your Server IP        :your_server_ipYour Server Port      :your_server_portYour Password         :your_passwordYour Protocol         :your_protocolYour obfs             :your_obfsYour Encryption Method:your_encryption_methodWelcome to visit:https://shadowsocks.be/9.htmlEnjoy it!<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="SSR常用指令"><a href="#SSR常用指令" class="headerlink" title="SSR常用指令"></a>SSR常用指令</h4><ul><li>卸载</li></ul><pre class="line-numbers language-bash"><code class="language-bash">./shadowsocksR.sh uninstall<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>启动</li></ul><pre class="line-numbers language-bash"><code class="language-bash">/etc/init.d/shadowsocks start<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>停止</li></ul><pre class="line-numbers language-bash"><code class="language-bash">/etc/init.d/shadowsocks stop<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>重启</li></ul><pre class="line-numbers language-bash"><code class="language-bash">/etc/init.d/shadowsocks restart<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="文件目录"><a href="#文件目录" class="headerlink" title="文件目录"></a>文件目录</h4><ol><li>配置文件路径：<code>/etc/shadowsocks.json</code></li><li>日志文件路径：<code>/var/log/shadowsocks.log</code></li><li>代码安装目录：<code>/usr/local/shadowsocks</code></li></ol><h4 id="配置多用户"><a href="#配置多用户" class="headerlink" title="配置多用户"></a>配置多用户</h4><pre class="line-numbers language-bash"><code class="language-bash"><span class="token punctuation">{</span>  <span class="token string">"server"</span><span class="token keyword">:</span><span class="token string">"0.0.0.0"</span>,  <span class="token string">"server_ipv6"</span><span class="token keyword">:</span> <span class="token string">"[::]"</span>,  <span class="token string">"local_address"</span><span class="token keyword">:</span><span class="token string">"127.0.0.1"</span>,  <span class="token string">"local_port"</span>:1080,  <span class="token string">"port_password"</span>:<span class="token punctuation">{</span>    <span class="token string">"8989"</span><span class="token keyword">:</span><span class="token string">"password1"</span>,    <span class="token string">"8990"</span><span class="token keyword">:</span><span class="token string">"password2"</span>,    <span class="token string">"8991"</span><span class="token keyword">:</span><span class="token string">"password3"</span>  <span class="token punctuation">}</span>,  <span class="token string">"timeout"</span>:300,  <span class="token string">"method"</span><span class="token keyword">:</span><span class="token string">"aes-256-cfb"</span>,  <span class="token string">"protocol"</span><span class="token keyword">:</span> <span class="token string">"origin"</span>,  <span class="token string">"protocol_param"</span><span class="token keyword">:</span> <span class="token string">""</span>,  <span class="token string">"obfs"</span><span class="token keyword">:</span> <span class="token string">"plain"</span>,  <span class="token string">"obfs_param"</span><span class="token keyword">:</span> <span class="token string">""</span>,  <span class="token string">"redirect"</span><span class="token keyword">:</span> <span class="token string">""</span>,  <span class="token string">"dns_ipv6"</span><span class="token keyword">:</span> false,  <span class="token string">"fast_open"</span><span class="token keyword">:</span> false,  <span class="token string">"workers"</span><span class="token keyword">:</span> 1<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="Windows客户端下载SSR"><a href="#Windows客户端下载SSR" class="headerlink" title="Windows客户端下载SSR"></a>Windows客户端下载SSR</h2><p>首先给出Windows客户端的<a href="https://github.com/shadowsocksr-backup/shadowsocksr-csharp" target="_blank" rel="noopener">下载地址</a> ，根据你系统安装 .NET Framework v2.0或4.0的支持库 来选择客户端中的 <strong>ShadowsocksR-dotnet2.0.exe</strong> 或 <strong>ShadowsocksR-dotnet4.0.exe</strong> 并打开客户端。</p><p>根据自己在服务器端配置SSR的密码、端口，加密方式，协议，混淆（obfs），相应的在客户端输入信息</p><p><img src="/2019/10/05/shi-yong-shadowsocksr-shi-xian-ke-xue-shang-wang/7.png" alt=""></p><h4 id="启动代理"><a href="#启动代理" class="headerlink" title="启动代理"></a>启动代理</h4><p>1、选择系统代理模式为PAC模式</p><p>2、选择系统代理规则为绕过局域网和大陆</p><ul><li><p><strong>绕过局域网</strong>，局域网内IP 不走代理直连，局域网外IP 都走代理。</p></li><li><p><strong>绕过局域网和大陆</strong>，访问网站的是大陆 IP 都不走代理直连，访问非大陆 IP 的网站都走代理。</p></li></ul><p>3、更新PAC为GFWList</p><p>以上步骤全部结束之后，就可以上google测试一下，如果你发现浏览youtube视频的时候速度不够快，我们还可以在服务器端开启Google的BBR内核脚本加速TCP</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">wget</span> --no-check-certificate https://github.com/teddysun/across/raw/master/bbr.sh <span class="token operator">&amp;&amp;</span> <span class="token function">chmod</span> +x bbr.sh <span class="token operator">&amp;&amp;</span> ./bbr.sh<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>安装完成后，脚本会提示需要重启 VPS，输入 y 并回车后重启。</p><p>重启完成后，进入 VPS，验证一下是否成功安装最新内核并开启 TCP BBR，输入以下命令：  </p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">uname</span> -r<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>如果出现相应的版本号那么恭喜你成功了，最后祝大家使用愉快🍾🍾🍾。</p><h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2><p>1、 <a href="https://github.com/zhaoweih/Shadowsocks-Tutorial" target="_blank" rel="noopener">给小白的Shadowsocks和V2ray翻墙教程</a></p><p>2、<a href="[https://walesexcitedmei.github.io/2018/11/26/SSR-ShadowsocksR-%E9%85%8D%E7%BD%AE%E5%8F%8A%E4%BD%BF%E7%94%A8/](https://walesexcitedmei.github.io/2018/11/26/SSR-ShadowsocksR-配置及使用/)">ShadowsocksR 配置及使用</a></p><p>3、<a href="https://github.com/shadowsocksr-backup/shadowsocks-rss/blob/master/ssr.md" target="_blank" rel="noopener">ShadowsocksR 协议插件文档</a></p><p>4、<a href="https://github.com/shadowsocksr-backup/shadowsocks-rss/wiki/config.json" target="_blank" rel="noopener">SSR配置文件各项说明</a></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
        <tags>
            
            <tag> shadowsocksR </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo 搭建自己的个性博客</title>
      <link href="/2019/09/24/hexo-da-jian-zi-ji-de-ge-xing-bo-ke/"/>
      <url>/2019/09/24/hexo-da-jian-zi-ji-de-ge-xing-bo-ke/</url>
      
        <content type="html"><![CDATA[<hr><blockquote><p>本篇教程主要记录使用 <code>hexo-theme-matery</code> 主题中遇到的一些问题，以及如何对该主题的博客进行个性化定制，优化功能。</p></blockquote><h2 id="Hexo-常用指令"><a href="#Hexo-常用指令" class="headerlink" title="Hexo 常用指令"></a>Hexo 常用指令</h2><pre class="line-numbers language-bash"><code class="language-bash">$ hexo new post <span class="token operator">&lt;</span>title<span class="token operator">></span>   <span class="token comment" spellcheck="true"># 新建一篇文章</span>$ hexo g                  <span class="token comment" spellcheck="true"># 生成静态文件</span>$ hexo s                  <span class="token comment" spellcheck="true"># 本地预览查看(http://localhost:4000/)</span>$ hexo d                  <span class="token comment" spellcheck="true"># 部署到网站</span>$ hexo version            <span class="token comment" spellcheck="true"># 查看hexo版本</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="Hexo文件目录结构"><a href="#Hexo文件目录结构" class="headerlink" title="Hexo文件目录结构"></a>Hexo文件目录结构</h2><pre class="line-numbers language-none"><code class="language-none">|-- .deploy_git|-- _config.yml|-- package.json|-- node_modules|-- scaffolds|-- public|-- themes|-- source   |-- _posts<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>💥 Tips：关于每个文件详细的信息和作用可以查看这篇<a href="https://yuchen-lea.github.io/2016-01-18-hexo-dir-struct/" target="_blank" rel="noopener">指南</a></p></blockquote><h2 id="Markdown-基本语法"><a href="#Markdown-基本语法" class="headerlink" title="Markdown 基本语法"></a>Markdown 基本语法</h2><blockquote><p>1、文字</p><pre class="line-numbers language-markdown"><code class="language-markdown"><span class="token bold"><span class="token punctuation">**</span> 加粗 <span class="token punctuation">**</span></span><span class="token list punctuation">*</span> 倾斜 *<span class="token bold"><span class="token punctuation">**</span>* 倾斜加粗 <span class="token punctuation">**</span></span>*~~ 加删除线 ~~<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>效果如下：</p><p><strong>加粗</strong></p><p><em>倾斜</em></p><p><strong><em>倾斜加粗</em></strong></p><p><del>删除线</del></p><p>2、图片、超链接</p><pre class="line-numbers language-markdown"><code class="language-markdown"><span class="token url">![图片名称](图片地址)</span><span class="token url">[超链接名字](超链接地址)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>3、列表</p><pre class="line-numbers language-markdown"><code class="language-markdown"><span class="token list punctuation">-</span> 列表内容<span class="token list punctuation">+</span> 列表内容<span class="token list punctuation">*</span> 列表内容<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><ul><li>列表内容</li></ul><p>4、引用</p><pre class="line-numbers language-markdown"><code class="language-markdown"><span class="token blockquote punctuation">></span> 引用内容<span class="token blockquote punctuation">>></span> 引用内容<span class="token blockquote punctuation">>>></span> 引用内容<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><blockquote><p>引用内容</p><blockquote><p>引用内容</p></blockquote></blockquote><p>5、代码高亮</p><pre class="line-numbers language-markdown"><code class="language-markdown">​```<span class="token url">[language] [<span class="token variable">title</span>]</span> <span class="token url">[url] [<span class="token variable">link-text</span>]</span>代码​```<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><ul><li>[language] 是代码语言的名称，用来设置代码块颜色高亮，非必须；</li><li>[title] 是顶部左边的说明，非必须；</li><li>[url] 是顶部右边的超链接地址，非必须；</li><li>[link text] 如它的字面意思，超链接的名称，非必须。</li></ul><p>示例如下：</p><pre class="line-numbers language-python"><code class="language-python"><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span>title<span class="token punctuation">:</span> friendsdate<span class="token punctuation">:</span> <span class="token number">2018</span><span class="token operator">-</span><span class="token number">12</span><span class="token operator">-</span><span class="token number">12</span> <span class="token number">21</span><span class="token punctuation">:</span><span class="token number">25</span><span class="token punctuation">:</span><span class="token number">30</span>type<span class="token punctuation">:</span> <span class="token string">"friends"</span>layout<span class="token punctuation">:</span> <span class="token string">"friends"</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>6、数学公式</p><pre class="line-numbers language-markdown"><code class="language-markdown">$ S=\pi r^2 $  \\行内$$ S=\pi r^2 $$  \\行间<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>示例如下：</p><p>$ S=\pi r^2 $</p><p>$$ S=\pi r^2 $$ </p><p>7、插入表情</p><p>在 Hexo 中默认的 markdown 渲染器是 <code>hexo-renderer-marked</code> ，这个渲染器是不支持 emoji 表情的。我们可以使用 <a href="https://github.com/crimx/hexo-filter-github-emojis" target="_blank" rel="noopener">hexo-filter-github-emojis</a> 插件加载表情</p><p><strong>安装</strong></p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># 文件位置~/blog/</span>$ <span class="token function">npm</span> <span class="token function">install</span> hexo-filter-github-emojis --save<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><strong>配置</strong></p><pre class="line-numbers language-bash"><code class="language-bash">githubEmojis:enable: <span class="token boolean">true</span>className: github-emojiunicode: <span class="token boolean">false</span>styles:localEmojis:<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>使用</strong></p><p>在 <a href="https://www.webpagefx.com/tools/emoji-cheat-sheet/" target="_blank" rel="noopener">Emoji Cheat Sheet</a> 中找到你想要的表情，然后点击即可复制。</p><p>😄🤖🏀🏍️🛍️</p><p>8、插入图片</p><p>首先确保在主站点配置文件中打开 <code>asset_folder</code> 功能：</p><pre class="line-numbers language-yaml"><code class="language-yaml"><span class="token key atrule">post_asset_folder</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>// url放置你github仓库的位置<span class="token key atrule">url</span><span class="token punctuation">:</span> http<span class="token punctuation">:</span>//humblebone.github.io<span class="token key atrule">root</span><span class="token punctuation">:</span> /<span class="token key atrule">permalink</span><span class="token punctuation">:</span> <span class="token punctuation">:</span>year/<span class="token punctuation">:</span>month/<span class="token punctuation">:</span>day/<span class="token punctuation">:</span>title/permalink_defaults<span class="token punctuation">:</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这样每次新建一篇文章时，都会生成同样命名的文件夹，将插入的图片放在该文件夹下，便可以引用了。</p><p>由于我采用的是 <code>Typora</code> 编写的 <code>markdown</code> 文件，所以我习惯于使用 <code>![]()</code> 的方式导入图片。因此，我们可以下载 <code>hexo-asser-image</code> 这个插件🎯</p><p>下载的时候需要注意，不要直接使用 <code>npm install hexo-asset-image --save</code> 命令行，这样下载到的不是最新的版本，使用如下的安装指令：</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> https://github.com/xcodebuild/hexo-asset-image --save<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>下载成功之后，我们便可以在编辑器中导入我们想要插入的图片😄，插入的方式如下：</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token operator">!</span><span class="token punctuation">[</span>title<span class="token punctuation">]</span><span class="token punctuation">(</span>新建文章的名称/xxx.png<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></blockquote><h2 id="Front-mateer介绍"><a href="#Front-mateer介绍" class="headerlink" title="Front-mateer介绍"></a>Front-mateer介绍</h2><table><thead><tr><th align="left">配置选项</th><th align="left">默认值</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left">title</td><td align="left"><code>Markdown</code> 的文件标题</td><td align="left">文章标题，强烈建议填写此选项</td></tr><tr><td align="left">date</td><td align="left">文件创建时的日期时间</td><td align="left">发布时间，强烈建议填写此选项，且最好保证全局唯一</td></tr><tr><td align="left">author</td><td align="left">根 <code>_config.yml</code> 中的 <code>author</code></td><td align="left">文章作者</td></tr><tr><td align="left">img</td><td align="left"><code>featureImages</code> 中的某个值</td><td align="left">文章特征图，推荐使用图床(腾讯云、七牛云、又拍云等)来做图片的路径.如: <code>http://xxx.com/xxx.jpg</code></td></tr><tr><td align="left">top</td><td align="left"><code>true</code></td><td align="left">推荐文章（文章是否置顶），如果 <code>top</code> 值为 <code>true</code>，则会作为首页推荐文章</td></tr><tr><td align="left">cover</td><td align="left"><code>false</code></td><td align="left"><code>v1.0.2</code>版本新增，表示该文章是否需要加入到首页轮播封面中</td></tr><tr><td align="left">coverImg</td><td align="left">无</td><td align="left"><code>v1.0.2</code>版本新增，表示该文章在首页轮播封面需要显示的图片路径，如果没有，则默认使用文章的特色图片</td></tr><tr><td align="left">password</td><td align="left">无</td><td align="left">文章阅读密码，如果要对文章设置阅读验证密码的话，就可以设置 <code>password</code> 的值，该值必须是用 <code>SHA256</code> 加密后的密码，防止被他人识破。前提是在主题的 <code>config.yml</code> 中激活了 <code>verifyPassword</code> 选项</td></tr><tr><td align="left">toc</td><td align="left"><code>true</code></td><td align="left">是否开启 TOC，可以针对某篇文章单独关闭 TOC 的功能。前提是在主题的 <code>config.yml</code> 中激活了 <code>toc</code> 选项</td></tr><tr><td align="left">mathjax</td><td align="left"><code>false</code></td><td align="left">是否开启数学公式支持 ，本文章是否开启 <code>mathjax</code>，且需要在主题的 <code>_config.yml</code> 文件中也需要开启才行</td></tr><tr><td align="left">summary</td><td align="left">无</td><td align="left">文章摘要，自定义的文章摘要内容，如果这个属性有值，文章卡片摘要就显示这段文字，否则程序会自动截取文章的部分内容作为摘要</td></tr><tr><td align="left">categories</td><td align="left">无</td><td align="left">文章分类，本主题的分类表示宏观上大的分类，只建议一篇文章一个分类</td></tr><tr><td align="left">tags</td><td align="left">无</td><td align="left">文章标签，一篇文章可以多个标签</td></tr></tbody></table><blockquote><p>🌟 <strong>注意</strong>:</p><ol><li>如果 <code>img</code> 属性不填写的话，文章特色图会根据文章标题的 <code>hashcode</code> 的值取余，然后选取主题中对应的特色图片，从而达到让所有文章的特色图<strong>各有特色</strong>。</li><li><code>date</code> 的值尽量保证每篇文章是唯一的，因为本主题中 <code>Gitalk</code> 和 <code>Gitment</code> 识别 <code>id</code> 是通过 <code>date</code> 的值来作为唯一标识的。</li></ol></blockquote><h2 id="加速Hexo博客"><a href="#加速Hexo博客" class="headerlink" title="加速Hexo博客"></a>加速Hexo博客</h2><p>由于原来主题中的许多功能都是动画效果，且主页面中的图片比较多，还有音频和视频的插入，所以为了加速博客的浏览速度，我关闭了许多不需要的功能</p><p>1、关闭首页文章滚动功能，后续如果想要将推荐的文章放在首页推荐，可以再加上</p><pre class="line-numbers language-python"><code class="language-python"><span class="token operator">~</span> 文件位置 themes<span class="token operator">/</span>matery<span class="token operator">/</span>_config<span class="token punctuation">.</span>yml <span class="token operator">~</span><span class="token comment" spellcheck="true"># 首页封面轮播图的相关配置.</span>cover<span class="token punctuation">:</span>  showPrevNext<span class="token punctuation">:</span> false <span class="token comment" spellcheck="true"># 是否显示左右切换按钮. </span>  showIndicators<span class="token punctuation">:</span> false <span class="token comment" spellcheck="true"># 是否显示指示器. </span>  autoLoop<span class="token punctuation">:</span> false <span class="token comment" spellcheck="true"># 是否自动轮播.</span>  duration<span class="token punctuation">:</span> <span class="token number">120</span> <span class="token comment" spellcheck="true"># 切换延迟时间. </span>  intervalTime<span class="token punctuation">:</span> <span class="token number">5000</span> <span class="token comment" spellcheck="true"># 自动切换下一张的间隔时间.</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>2、关闭鼠标点击出现爱心💗</p><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 是否激活点击页面的'爱心'效果，默认激活.</span>clicklove<span class="token punctuation">:</span>  enable<span class="token punctuation">:</span> false<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>3、关闭首页显示音乐播放功能（后续可以尝试将其修改到关于about界面）</p><pre class="line-numbers language-python"><code class="language-python">music<span class="token punctuation">:</span>  enable<span class="token punctuation">:</span> false  showTitle<span class="token punctuation">:</span> false  title<span class="token punctuation">:</span> 听听音乐  fixed<span class="token punctuation">:</span> false <span class="token comment" spellcheck="true"># 开启吸底模式</span>  autoplay<span class="token punctuation">:</span> false <span class="token comment" spellcheck="true"># 是否自动播放</span>  theme<span class="token punctuation">:</span> <span class="token string">'#542674'</span>  loop<span class="token punctuation">:</span> <span class="token string">'all'</span> <span class="token comment" spellcheck="true"># 音频循环播放, 可选值: 'all', 'one', 'none'</span>  order<span class="token punctuation">:</span> <span class="token string">'list'</span> <span class="token comment" spellcheck="true"># 音频循环顺序, 可选值: 'list', 'random'</span>  preload<span class="token punctuation">:</span> <span class="token string">'auto'</span> <span class="token comment" spellcheck="true"># 预加载，可选值: 'none', 'metadata', 'auto'</span>  volume<span class="token punctuation">:</span> <span class="token number">0.7</span> <span class="token comment" spellcheck="true"># 默认音量，请注意播放器会记忆用户设置，用户手动设置音量后默认音量即失效</span>  listFolded<span class="token punctuation">:</span> false <span class="token comment" spellcheck="true"># 列表默认折叠</span>  listMaxHeight<span class="token punctuation">:</span> <span class="token comment" spellcheck="true">#列表最大高度</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>4、修改首页banner和每篇文章封面的featureeimages图片的尺寸大小</p><p>matery主题的封面图片是根据周一到周日不同天数，来选取不同的图片。其使用的函数为：</p><pre class="line-numbers language-python"><code class="language-python"><span class="token operator">//</span> 每天切换 banner 图<span class="token punctuation">.</span>  Switch banner image every day<span class="token punctuation">.</span><span class="token operator">&lt;</span>script<span class="token operator">></span>$<span class="token punctuation">(</span><span class="token string">'.bg-cover'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>css<span class="token punctuation">(</span><span class="token string">'background-image'</span><span class="token punctuation">,</span> <span class="token string">'url(/medias/banner/'</span>                    <span class="token operator">+</span> new Date<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>getDay<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">'.png)'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>而每篇文章的封面图片如果没有指定的话，是采用哈希值取不同的特色图片，实现的函数如下：</p><pre class="line-numbers language-python"><code class="language-python">var featureimg <span class="token operator">=</span> <span class="token string">'/medias/bg.jpg'</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span>page<span class="token punctuation">.</span>img<span class="token punctuation">)</span> <span class="token punctuation">{</span>    featureimg <span class="token operator">=</span> page<span class="token punctuation">.</span>img<span class="token punctuation">;</span><span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>    var hashCode <span class="token operator">=</span> function <span class="token punctuation">(</span>str<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>!str <span class="token operator">&amp;</span><span class="token operator">&amp;</span> str<span class="token punctuation">.</span>length <span class="token operator">==</span><span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        var hash <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span>var i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> len <span class="token operator">=</span> str<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i <span class="token operator">&lt;</span> len<span class="token punctuation">;</span> i<span class="token operator">+</span><span class="token operator">+</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            hash <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>hash <span class="token operator">&lt;&lt;</span> <span class="token number">5</span><span class="token punctuation">)</span> <span class="token operator">-</span> hash<span class="token punctuation">)</span> <span class="token operator">+</span> str<span class="token punctuation">.</span>charCodeAt<span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>            hash <span class="token operator">|</span><span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> hash<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span>    var len <span class="token operator">=</span> theme<span class="token punctuation">.</span>featureImages<span class="token punctuation">.</span>length<span class="token punctuation">;</span>    var num <span class="token operator">=</span> Math<span class="token punctuation">.</span>abs<span class="token punctuation">(</span>hashCode<span class="token punctuation">(</span>page<span class="token punctuation">.</span>title<span class="token punctuation">)</span> <span class="token operator">%</span> len<span class="token punctuation">)</span><span class="token punctuation">;</span>    featureimg <span class="token operator">=</span> theme<span class="token punctuation">.</span>featureImages<span class="token punctuation">[</span>num<span class="token punctuation">]</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>考虑到网页的加载速度⚡，现在使用的banner图片分辨率为<code>1280 x 720</code> ，featureimages使用的图片分辨率为 <code>320 x 240</code> 。</p><h2 id="SEO优化"><a href="#SEO优化" class="headerlink" title="SEO优化"></a>SEO优化</h2><p>一个网站的SEO对一个网站非常重要，<a href="https://link.zhihu.com/?target=https%3A//baike.baidu.com/item/SEO/102990%3Ffr%3Daladdin" target="_blank" rel="noopener">SEO</a>指的是搜索引擎优化。通过搜索引擎优化，可以提高网站的网站关键词排名以及博客文章的曝光度。一般来说，我们针对百度和Google这两个搜索引擎进行优化，提高对网站资源的索引量，使我们的文章更容易被发现。</p><h4 id="站点地图"><a href="#站点地图" class="headerlink" title="站点地图"></a>站点地图</h4><p>站点地图即<a href="https://link.zhihu.com/?target=https%3A//baike.baidu.com/item/sitemap/6241567%3Ffr%3Daladdin" target="_blank" rel="noopener">sitemap</a>， 是一个页面，上面放置了网站上需要搜索引擎抓取的所有页面的链接。站点地图可以告诉搜索引擎网站上有哪些可供抓取的网页，以便搜索引擎可以更加智能地抓取网站。</p><p><strong>生成站点地图</strong></p><p>安装百度和Google的站点地图生成插件：</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> hexo-generator-baidu-sitemap --save<span class="token function">npm</span> <span class="token function">install</span> hexo-generator-sitemap --save<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><strong>修改配置文件</strong></p><p>修改站点配置文件_config.yml，添加以下内容：</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># 自动生成sitemap</span>sitemap:  path: sitemap.xmlbaidusitemap:  path: baidusitemap.xml<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>生成和部署</strong></p><p>执行生成和部署命令：</p><pre class="line-numbers language-text"><code class="language-text">hexo ghexo d<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>此时，进入public目录，你会发现里面有sitemap.xml和baidusitemap.xml两个文件，这就是生成的站点地图。里面包含了网站上所有页面的链接，搜索引擎通过这两个文件来抓取网站页面。</p><blockquote><p>sitemap.xml用来提交给Google<br>baidusitemap.xml用来提交给百度</p></blockquote><h4 id="谷歌收录"><a href="#谷歌收录" class="headerlink" title="谷歌收录"></a>谷歌收录</h4><p>登陆 <a href="https://www.google.com/webmasters/" target="_blank" rel="noopener">谷歌站长平台</a>，提交自己博客的站点网址，对站点进行验证，选择验证的方式为HTML标签验证</p><p>打开<code>themes/matery/layout/_partial/head.ejs</code>修改下面两行：</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token operator">&lt;</span>meta name<span class="token operator">=</span><span class="token string">"baidu-site-verification"</span> content<span class="token operator">=</span><span class="token string">"xxx"</span> /<span class="token operator">></span><span class="token operator">&lt;</span>meta name<span class="token operator">=</span><span class="token string">"google-site-verification"</span> content<span class="token operator">=</span><span class="token string">"xxx"</span> /<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h4 id="添加蜘蛛协议"><a href="#添加蜘蛛协议" class="headerlink" title="添加蜘蛛协议"></a>添加蜘蛛协议</h4><p>蜘蛛协议就是告诉爬虫，你的哪些文件爬虫可以爬取，哪些不能的文件。</p><p>新建一个<code>robots.txt</code>文件，添加以下内容，然后放到<code>/yoursite/source/</code>文件夹下面：</p><pre class="line-numbers language-text"><code class="language-text">User-agent: *Allow: /Allow: /archives/Allow: /tags/Allow: /categories/Allow: /tags/Allow: /about/Allow: /contact/Disallow: /js/Disallow: /css/Disallow: /lib/Sitemap: https://humblebone.com<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="百度收录"><a href="#百度收录" class="headerlink" title="百度收录"></a>百度收录</h4><p>百度收录的方法和谷歌收录的方法相似，只是百度收录的时间特别久，我提交了快一个星期了，还是显示没有收录成功。</p><p>因为 Github Pages 屏蔽了百度爬虫，所以可以将博客同步到两个平台上，一个 <a href="https://github.com/" target="_blank" rel="noopener">Github</a>，一个国内的 <a href="https://coding.net/" target="_blank" rel="noopener">Coding</a>。选择 <code>Coding</code> 的好处就是国内的访问速度会变快，而国外访问的时候便可以直接访问 github，整体原理有点类似PAC。</p><h2 id="存在的Bug"><a href="#存在的Bug" class="headerlink" title="存在的Bug"></a>存在的Bug</h2><p>1、代码块中的代码一行不能输入太长，这样会导致行数有时候不会对齐，即代码会超出行数。</p><p>2、由于文章的特色图片在首页封面中够用，但是单点开文章时，使用的banner还是该尺寸的featureimage，所以后续需要修改一下该动能。</p><p>3、在站点测速网站上分析博客主要存在相应时间的问题，<a href="https://gtmetrix.com/" target="_blank" rel="noopener">Gtmetrix</a> 测速网站可以实现输入域名后，检测网站的整体加载速度，并给出相应的修改意见。</p><p><img src="/2019/09/24/hexo-da-jian-zi-ji-de-ge-xing-bo-ke/1.png" alt=""></p><p><img src="/2019/09/24/hexo-da-jian-zi-ji-de-ge-xing-bo-ke/2.png" alt=""></p><p>可见目前网站主要还是网页图片加载的速度是首要问题🙃，其次每日诗词的加载和字体也会占据一大部分时间，后续也会想办法进行优化🐳🐳🐳。</p><h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2><p>1、关于该博客的主题使用的详细教程我主要参考了 <a href="https://blinkfox.github.io/2018/09/28/qian-duan/hexo-bo-ke-zhu-ti-zhi-hexo-theme-matery-de-jie-shao/" target="_blank" rel="noopener">Blinkfox</a> 的这篇安装教程</p><p>2、关于博客的一些个性化定制主要参考了 <a href="https://godweiyang.com/2018/04/13/hexo-blog/" target="_blank" rel="noopener">godweiyang</a> 的详细教程，</p><p>3、关于博客站点的SEO优化参考了 <a href="https://zhuanlan.zhihu.com/p/28468742" target="_blank" rel="noopener">Hexo博客提交百度和Google收录</a> 、</p><p>4、 添加 <a href="http://dugblog.coding.me/Hexo/20180625-Hexo-SEO.html" target="_blank" rel="noopener">蜘蛛协议</a></p><p>最后感谢他们的帮助🌹，让 <code>hexo-matery-theme</code>这个主题可以服务到更多的人。同时，也感谢 <a href="http://io-oi.me/" target="_blank" rel="noopener">reuixiy</a> 的博客，这个博主最近在hugo上开源了自己的主题，大家可以去他们的博客逛一逛，会有很多惊喜🥳</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
